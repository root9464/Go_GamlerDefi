basePath: /
definitions:
  fiber.Map:
    additionalProperties: true
    type: object
  github_com_root9464_Go_GamlerDefi_src_layers_modules_referral_dto.CellResponse:
    properties:
      cell:
        description: |-
          Cell of the response
          required: true
          example: 0QC3PUCoxBdLfOmO8xFQ84TGFPQUatxvvRsSAODKEvjbb4OS
        type: string
    type: object
  github_com_root9464_Go_GamlerDefi_src_layers_modules_referral_dto.LevelRequest:
    properties:
      address:
        description: |-
          Address of the level
          required: true
          example: 0QC3PUCoxBdLfOmO8xFQ84TGFPQUatxvvRsSAODKEvjbb4OS
        type: string
      amount:
        description: |-
          Amount of the level
          required: true
          minimum: 0
          example: 150
        type: number
      level_number:
        description: |-
          Level number
          required: true
          minimum: 0
          example: 0
        type: integer
      rate:
        description: |-
          Rate of the level
          required: true
          minimum: 0
          example: 0.2
        type: number
    type: object
  github_com_root9464_Go_GamlerDefi_src_layers_modules_referral_dto.PaymentOrder:
    properties:
      created_at:
        description: |-
          Date of creation
          required: true
          example: 1715731200
        type: integer
      id:
        description: |-
          ID of the payment order
          required: false
          minimum: 1
          example: 12345
        type: string
      leader_id:
        description: |-
          ID of the author
          required: true
          minimum: 1
          example: 12345
        type: integer
      levels:
        description: |-
          Levels of the payment
          required: true
          example: [{"level_number": 0, "rate": 0.2, "amount": 150, "address": "0QC3PUCoxBdLfOmO8xFQ84TGFPQUatxvvRsSAODKEvjbb4OS"}]
        items:
          $ref: '#/definitions/github_com_root9464_Go_GamlerDefi_src_layers_modules_referral_dto.LevelRequest'
        type: array
      referral_id:
        description: |-
          ID of the referral
          required: true
          minimum: 1
          example: 12345
        type: integer
      referrer_id:
        description: |-
          ID of the referrer
          required: true
          minimum: 1
          example: 12345
        type: integer
      ticket_count:
        description: |-
          Number of tickets to process
          required: true
          minimum: 1
          example: 100
        type: integer
      total_amount:
        description: |-
          Total amount of the payment
          required: true
          minimum: 0
          example: 100.0
        type: number
      tr_hash:
        description: |-
          Transaction hash
          required: false
          example: 1e95861ef87af4c75811a0e3aaebd0ef9044bbc84e31425619405b8158d2795c
        type: string
    type: object
  github_com_root9464_Go_GamlerDefi_src_layers_modules_referral_dto.PaymentType:
    enum:
    - accrual_platform
    - leader_accrual
    type: string
    x-enum-varnames:
    - PaymentPlatform
    - PaymentLeader
  github_com_root9464_Go_GamlerDefi_src_layers_modules_referral_dto.ReferralProcessRequest:
    properties:
      leader_id:
        description: |-
          ID of the author
          required: true
          minimum: 1
          example: 12345
        type: integer
      payment_type:
        allOf:
        - $ref: '#/definitions/github_com_root9464_Go_GamlerDefi_src_layers_modules_referral_dto.PaymentType'
        description: |-
          Type of payment processing
          required: true
          enum: accrual_platform,leader_accrual
          example: accrual_platform
        enum:
        - accrual_platform
        - leader_accrual
      referral_id:
        description: |-
          ID of the referred user
          required: true
          minimum: 1
          example: 67890
        type: integer
      referrer_id:
        description: |-
          ID of the referring user
          required: true
          minimum: 1
          example: 12345
        type: integer
      ticket_count:
        description: |-
          Number of tickets to process
          required: true
          minimum: 1
          example: 5
        type: integer
    required:
    - payment_type
    - referral_id
    - referrer_id
    - ticket_count
    type: object
  github_com_root9464_Go_GamlerDefi_src_layers_modules_referral_dto.ReferredUserResponse:
    properties:
      createdAt:
        type: string
      name:
        type: string
      photo_path:
        type: string
      surname:
        type: string
      telegram:
        type: string
      user_id:
        type: integer
    type: object
  github_com_root9464_Go_GamlerDefi_src_layers_modules_referral_dto.ReferrerResponse:
    properties:
      name:
        type: string
      photo_path:
        type: string
      refer_id:
        type: integer
      referred_users:
        items:
          $ref: '#/definitions/github_com_root9464_Go_GamlerDefi_src_layers_modules_referral_dto.ReferredUserResponse'
        type: array
      surname:
        type: string
      telegram:
        type: string
      user_id:
        type: integer
      wallet_address:
        type: string
    type: object
  github_com_root9464_Go_GamlerDefi_src_layers_modules_validation_dto.WorkerStatus:
    enum:
    - pending
    - waiting
    - running
    - success
    - failed
    type: string
    x-enum-varnames:
    - WorkerStatusPending
    - WorkerStatusWaiting
    - WorkerStatusRunning
    - WorkerStatusSuccess
    - WorkerStatusFailed
  github_com_root9464_Go_GamlerDefi_src_layers_modules_validation_dto.WorkerTransactionDTO:
    properties:
      created_at:
        description: |-
          Created at
          required: false
          example: 1715731200
        type: integer
      id:
        description: |-
          ID of the worker transaction
          required: false
          example: "682a67342a36c14af648479b"
        type: string
      payment_order_id:
        description: |-
          Payment order ID
          required: true
          example: "6826ac79ff2f0eb00db5fa1d"
        type: string
      status:
        allOf:
        - $ref: '#/definitions/github_com_root9464_Go_GamlerDefi_src_layers_modules_validation_dto.WorkerStatus'
        description: |-
          Status of the worker transaction
          required: true
          example: "pending"
      target_address:
        description: |-
          Target address of the transaction
          required: true
          example: "0QANsjLvOX2MERlT4oyv2bSPEVc9lunSPIs5a1kPthCXydUX"
        type: string
      tx_hash:
        description: |-
          Hash of the transaction
          required: true
          example: "105f7620bf78d534941ebcf97dda0dbe8e79c134a8ab346843787c71fe3308d5"
        type: string
      tx_query_id:
        description: |-
          Query ID of the transaction
          required: true
          example: 1747000636
        type: integer
      updated_at:
        description: |-
          Updated at
          required: false
          example: 1715731200
        type: integer
    required:
    - status
    - target_address
    - tx_hash
    - tx_query_id
    type: object
  github_com_root9464_Go_GamlerDefi_src_layers_modules_validation_dto.WorkerTransactionResponse:
    properties:
      message:
        description: |-
          Message of the response
          example: "Transaction processed successfully"
        type: string
      status:
        allOf:
        - $ref: '#/definitions/github_com_root9464_Go_GamlerDefi_src_layers_modules_validation_dto.WorkerStatus'
        description: Status of the worker transaction
      tx_hash:
        description: |-
          Transaction of the response
          example: "105f7620bf78d534941ebcf97dda0dbe8e79c134a8ab346843787c71fe3308d5"
        type: string
      tx_id:
        description: |-
          Transaction ID
          example: "682a67342a36c14af648479b"
        type: string
    type: object
  github_com_root9464_Go_GamlerDefi_src_packages_lib_error.MapError:
    properties:
      description:
        description: |-
          Detailed error description
          example: "Field 'email' must be valid email address"
        type: string
      message:
        description: |-
          Error message
          example: "invalid request parameters"
        type: string
    type: object
host: localhost:6069
info:
  contact: {}
  description: API for GamlerDefi
  title: GamlerDefi API
  version: "1.0"
paths:
  /api/ping:
    get:
      consumes:
      - application/json
      description: Ping the server
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Ping
      tags:
      - test
  /api/referral/debt/{author_id}/{referrer_id}:
    get:
      consumes:
      - application/json
      description: Getting debt from author to referrer
      produces:
      - application/json
      responses:
        "200":
          description: Success response
          schema:
            $ref: '#/definitions/github_com_root9464_Go_GamlerDefi_src_layers_modules_referral_dto.PaymentOrder'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/github_com_root9464_Go_GamlerDefi_src_packages_lib_error.MapError'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/github_com_root9464_Go_GamlerDefi_src_packages_lib_error.MapError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_root9464_Go_GamlerDefi_src_packages_lib_error.MapError'
      summary: getting debt from author to referrer
      tags:
      - Referrals
  /api/referral/payment-orders/pay:
    get:
      consumes:
      - application/json
      description: Pay a payment order by ID
      parameters:
      - description: Order ID
        in: path
        name: order_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success response
          schema:
            $ref: '#/definitions/github_com_root9464_Go_GamlerDefi_src_layers_modules_referral_dto.CellResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/github_com_root9464_Go_GamlerDefi_src_packages_lib_error.MapError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_root9464_Go_GamlerDefi_src_packages_lib_error.MapError'
      summary: Pay payment order
      tags:
      - Referrals
  /api/referral/payment-orders/pay-all:
    get:
      consumes:
      - application/json
      description: Paying all debt from author to referrer
      parameters:
      - description: Author ID
        in: query
        name: author_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_root9464_Go_GamlerDefi_src_layers_modules_referral_dto.CellResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_root9464_Go_GamlerDefi_src_packages_lib_error.MapError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_root9464_Go_GamlerDefi_src_packages_lib_error.MapError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_root9464_Go_GamlerDefi_src_packages_lib_error.MapError'
      summary: Pay all debt from author to referrer
      tags:
      - Referrals
  /api/referral/precheckout/{user_id}:
    get:
      consumes:
      - application/json
      description: Сheck if the user is a referrer
      produces:
      - application/json
      responses:
        "200":
          description: Success response
          schema:
            $ref: '#/definitions/github_com_root9464_Go_GamlerDefi_src_layers_modules_referral_dto.ReferrerResponse'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/github_com_root9464_Go_GamlerDefi_src_packages_lib_error.MapError'
        "404":
          description: Not found
          schema:
            $ref: '#/definitions/github_com_root9464_Go_GamlerDefi_src_packages_lib_error.MapError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_root9464_Go_GamlerDefi_src_packages_lib_error.MapError'
      summary: checking the referrer
      tags:
      - Referrals
  /api/referral/validate-invitation-conditions:
    get:
      consumes:
      - application/json
      description: Validate invitation conditions
      parameters:
      - description: Author ID
        in: query
        name: author_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_root9464_Go_GamlerDefi_src_layers_modules_referral_dto.CellResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_root9464_Go_GamlerDefi_src_packages_lib_error.MapError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_root9464_Go_GamlerDefi_src_packages_lib_error.MapError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_root9464_Go_GamlerDefi_src_packages_lib_error.MapError'
      summary: Validate invitation conditions
      tags:
      - Referrals
  /api/referrals/delete/{order_id}:
    delete:
      consumes:
      - application/json
      description: Delete a payment order by ID
      parameters:
      - description: Order ID
        in: path
        name: order_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success response
          schema:
            $ref: '#/definitions/fiber.Map'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/github_com_root9464_Go_GamlerDefi_src_packages_lib_error.MapError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_root9464_Go_GamlerDefi_src_packages_lib_error.MapError'
      summary: Delete payment order
      tags:
      - Referrals
  /api/referrals/delete/all:
    delete:
      consumes:
      - application/json
      description: Delete all payment orders
      produces:
      - application/json
      responses:
        "200":
          description: Success response
          schema:
            $ref: '#/definitions/fiber.Map'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/fiber.Map'
      summary: Delete all payment orders
      tags:
      - Referrals
  /api/referrals/process:
    post:
      consumes:
      - application/json
      description: Calculate and distribute referral bonuses between users
      parameters:
      - description: Referral processing data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_root9464_Go_GamlerDefi_src_layers_modules_referral_dto.ReferralProcessRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success response
          schema:
            $ref: '#/definitions/fiber.Map'
        "400":
          description: Validation error
          schema:
            $ref: '#/definitions/github_com_root9464_Go_GamlerDefi_src_packages_lib_error.MapError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/github_com_root9464_Go_GamlerDefi_src_packages_lib_error.MapError'
      summary: Process of awarding referral bonuses to the user
      tags:
      - Referrals
  /api/validation/validate:
    post:
      consumes:
      - application/json
      description: Validate transaction
      parameters:
      - description: Transaction
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/github_com_root9464_Go_GamlerDefi_src_layers_modules_validation_dto.WorkerTransactionDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Transaction processed successfully
          schema:
            $ref: '#/definitions/github_com_root9464_Go_GamlerDefi_src_layers_modules_validation_dto.WorkerTransactionResponse'
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/github_com_root9464_Go_GamlerDefi_src_packages_lib_error.MapError'
        "409":
          description: Failed transaction processing
          schema:
            $ref: '#/definitions/github_com_root9464_Go_GamlerDefi_src_layers_modules_validation_dto.WorkerTransactionResponse'
      summary: Validate transaction
      tags:
      - Validation
swagger: "2.0"
